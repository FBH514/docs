[
  {
    "title": "__init__",
    "params": [
      {
        "param": "limit",
        "type": "int"
      }
    ],
    "returns": "void",
    "overview": "Constructor for the Queue data structure.",
    "description": []
  },
  {
    "title": "__str__",
    "params": [],
    "returns": "str",
    "overview": "Returns a string representation of the object to display.",
    "description": []
  },
  {
    "title": "__repr__",
    "params": [],
    "returns": "str",
    "overview": "Returns a string representation of the object to debug.",
    "description": []
  },
  {
    "title": "limit",
    "params": [],
    "returns": "int",
    "overview": "Returns Queue's Node object limit.",
    "description": [
      "@property"
    ]
  },
  {
    "title": "limit",
    "params": [
      {
        "param": "value",
        "type": "int"
      }
    ],
    "returns": "void",
    "overview": "Sets the Queue's Node object limit.",
    "description": [
      "@limit.setter"
    ]
  },
  {
    "title": "enqueue",
    "params": [
      {
        "param": "data",
        "value":"any"
      }
    ],
    "returns": "void",
    "overview": "Inserts new data in the Queue.",
    "description": [
      "Throws ValueError if data is None.",
      "Throws IndexError if Queue is full."
    ]
  },
  {
    "title": "dequeue",
    "params": [],
    "returns": "Any",
    "overview": "Removes and returns the first item in the Queue.",
    "description": [
      "Throws IndexError if Queue is empty."
    ]
  },
  {
    "title": "peek",
    "params": [],
    "returns": "Any",
    "overview": "Returns the first item in the Queue without removing it.",
    "description": [
      "Throws IndexError if Queue is empty."
    ]
  },
  {
    "title": "contains",
    "params": [
      {
        "param": "data",
        "type": "Any"
      }
    ],
    "returns": "bool",
    "overview": "Returns whether the data is in the Queue.",
    "description": [
      "Returns True if item is in the Queue.",
      "Returns False if item is not in the Queue.",
      "Throws ValueError if data is None.",
      "Throws IndexError if Queue is empty."
    ]
  },
  {
    "title": "is_empty",
    "params": [],
    "returns": "bool",
    "overview": "Returns whether the Queue is empty.",
    "description": [
      "Returns True if Queue is empty.",
      "Returns False if Queue is not empty."
    ]
  },
  {
    "title": "size",
    "params": [],
    "returns": "int",
    "overview": "Returns the Queue's size.",
    "description": []
  }
]