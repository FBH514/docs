[
  {
    "title": "__init__",
    "params": [
      {
        "param": "limit",
        "type": "int",
        "optional": true
      }
    ],
    "returns": "None",
    "overview": "Constructor for the Linked List data structure.",
    "description": []
  },
  {
    "title": "__str__",
    "params": [],
    "returns": "str",
    "overview": "Returns a string representation of the Linked List to display.",
    "description": []
  },
  {
    "title": "__repr__",
    "params": [],
    "returns": "str",
    "overview": "Returns a string representation of the Linked List to debug.",
    "description": []
  },
  {
    "title": "limit",
    "params": [],
    "returns": "int",
    "overview": "Returns Linked List's Node object limit.",
    "description": [
      "@property"
    ]
  },
  {
    "title": "limit",
    "params": [
      {
        "param": "value",
        "type": "int",
        "optional": false
      }
    ],
    "returns": "None",
    "overview": "Sets the Linked List's Node object limit.",
    "description": [
      "@limit.setter",
      "Raises ValueError if value not > 0.",
      "Raises ValueError if value is smaller than the Linked List's size."
    ]
  },
  {
    "title": "append",
    "params": [
      {
        "param": "data",
        "value":"Any",
        "optional": false
      }
    ],
    "returns": "None",
    "overview": "Inserts new data in the Linked List.",
    "description": [
      "Raises ValueError if data is None.",
      "Raises IndexError if Linked List is full."
    ]
  },
  {
    "title": "remove",
    "params": [
      {
        "param": "data",
        "value": "Any",
        "optional": false
      }
    ],
    "returns": "Any",
    "overview": "Removes and returns the data in the Linked List.",
    "description": [
      "Raises IndexError if Linked List is empty.",
      "Raises ValueError if data is None.",
      "Raises ValueError if data is not found."
    ]
  },
  {
    "title": "peek",
    "params": [],
    "returns": "Any",
    "overview": "Returns the first item in the Linked List without removing it.",
    "description": [
      "Raises IndexError if Linked List is empty."
    ]
  },
  {
    "title": "contains",
    "params": [
      {
        "param": "data",
        "type": "Any",
        "optional": false
      }
    ],
    "returns": "bool",
    "overview": "Returns whether the data is in the Linked List.",
    "description": [
      "Raises ValueError if data is None.",
      "Raises IndexError if Linked List is empty.",
      "Returns True if item is in the Linked List.",
      "Returns False if item is not in the Linked List."
    ]
  },
  {
    "title": "is_empty",
    "params": [],
    "returns": "bool",
    "overview": "Returns whether the Linked List is empty.",
    "description": [
      "Returns True if Linked List is empty.",
      "Returns False if Linked List is not empty."
    ]
  },
  {
    "title": "size",
    "params": [],
    "returns": "int",
    "overview": "Returns the Linked List's size.",
    "description": []
  }
]